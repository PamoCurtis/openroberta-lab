#define WHEELDIAMETER 5.6
#define TRACKWIDTH 12.0
#define MAXLINES 8
#define MIN(X, Y) (((X) < (Y)) ? (X) : (Y))
#define MAX(X, Y) (((X) > (Y)) ? (X) : (Y))
#define M_PI PI
#define M_E 2.718281828459045
#define M_GOLDEN_RATIO 1.61803398875
#define M_SQRT2 1.41421356237
#define M_SQRT1_2 0.707106781187
#define M_INFINITY 0x7f800000
#include "NEPODefs.h" // contains NEPO declarations for the NXC NXT API resources




float ___array2[5];
float ___result;
task main() {
    float _____array2[] = {1, 2, 3, 4, 5};
    ___array2 = _____array2;
    ___result = 0;
    ___result = ArraySum(___array2);
    ___result = (___result * ___array2[sanitiseFromStart(ArrayLen(___array2), 3)]);
    ___array2[sanitiseFromStart(ArrayLen(___array2), 4)] = 1;
    ___result = (___result + ArrayMax(___array2));
    ___result = (___result * ArrFindFirstNum(___array2, 3));
    ___result = (___result + ArrFindLastNum(___array2, 1));
    ___array2[sanitiseFromEnd(ArrayLen(___array2), -1 - 3)] = 5;
    ___array2[sanitiseFromStart(ArrayLen(___array2), 0)] = 6;
    ___array2[sanitiseFromEnd(ArrayLen(___array2), -1)] = 7;
    ___result = (___result + ArrayMean(___array2));
    NumOut(0, (MAXLINES - 1) * MAXLINES, ___result);
    Wait(2500);
}

