SayTextAction [StringConst [Begin eyes L.E.D. test], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]
SayTextAction [StringConst [Setting eyes to red], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]
SetLeds [EYES, ColorConst [#ff0000], ]
WaitTimeStmt [time=NumConst [2000]]
SayTextAction [StringConst [Setting eyes to blue], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]
SetLeds [EYES, ColorConst [#3366ff], ]
WaitTimeStmt [time=NumConst [2000]]
SayTextAction [StringConst [Setting eyes to black], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]
SetLeds [EYES, ColorConst [#000000], ]
WaitTimeStmt [time=NumConst [2000]]
SayTextAction [StringConst [Setting eyes to white], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]
SetLeds [EYES, ColorConst [#ffffff], ]
WaitTimeStmt [time=NumConst [2000]]
SayTextAction [StringConst [Eyes L.E.D. test complete], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]
SayTextAction [StringConst [Begin ears, chest and head L.E.D. intensity test], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]

(repeat [TIMES, Var [k0], NumConst [0], NumConst [6], NumConst [1]]
AktionStmt [SayTextAction [FunctionExpr [TextJoinFunct [StringConst [Setting intensity to], Var [intensity]]], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]]
AktionStmt [SetLeds [EARS, Var [intensity], ]]
AktionStmt [SetLeds [CHEST, Var [intensity], ]]
AktionStmt [SetLeds [HEAD, Var [intensity], ]]
Var [intensity] := Binary [ADD, Var [intensity], NumConst [20]]

)
SayTextAction [StringConst [Ears, chest and head intensity test complete], EmptyExpr [defVal=NUMBER_INT], EmptyExpr [defVal=NUMBER_INT]]
